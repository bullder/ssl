#!/usr/bin/env php
<?php

use Punkstar\Ssl\Certificate;

require_once __DIR__ . '/../vendor/autoload.php';

$arguments = $argv;

if (count($arguments) !== 2) {
    print("Error: Expected a single argument, the URL that you want to analyse.\n");
    exit(1);
}

list($scriptName, $url) = $arguments;

$reader = new \Punkstar\Ssl\Reader();
$cert = $reader->readFromUrl($url);

function renderCert(Certificate $cert)
{
    $rawCert = $cert->toString();
    $certName = $cert->certName();
    $validFrom = $cert->validFrom();
    $validTo = $cert->validTo();
    $now = new DateTime('now');
    $signatureAlgorithm = $cert->signatureAlgorithm();
    
    $certSubject = print_r($cert->subject(), true);
    $certIssuer = print_r($cert->issuer(), true);
    $certSans = print_r($cert->sans(), true);
    
    $isValid = ($validFrom <= $now && $validTo >= $now) ? 'Yes' : 'No';
    
    echo <<<OUTPUT
    
    Name: $certName
    
    Validity: From {$validFrom->format('r')} until {$validTo->format('r')}
    
    Is Valid? $isValid
    
    Subject:
    
    {$certSubject}
    
    Issuer:
    
    {$certIssuer}
    
    SANs:
    
    {$certSans}
    
    Signature algorithm:
    
    {$signatureAlgorithm}

    Raw certificate:

    {$rawCert}
    
    OUTPUT;
}

renderCert($cert);

foreach ($cert->chain() as $idx => $chainCert) {
    $message = sprintf("Chain #%d", $idx);

    echo "\n\n";
    echo str_repeat('=', strlen(trim($message)));
    echo "\n" . $message . "\n";
    echo str_repeat('=', strlen(trim($message)));
    echo "\n\n";

    renderCert($chainCert);
}
